1. When would you want to use a remote repository rather than keeping all your
work local?

Whenever cooperating with other persons, or when working from multiple
computers, or in order to back up my work.

2. Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

I may be working on the same file that was modified in the remote repository,
and conflicts may arise. It is preferable that I choose when to sync the remote
and the local repositories, and to resolve the potential conflicts when I want
to.

3. Describe the differences between forks, clones, and branches. When would you
use one instead of another?

Use forks to clone a repository on github directly; it gives credit to the
owner of the repository. After forking, I can edit the forked repository.

Use clone to clone (locally or from github) a repository.

Use branches within a given repository (in order to try out different things,
for instance).

--------------------------------------------------------------------------------
To interact with github:

go to github and create an empty repository.

then, in bash use the following command, to add the repository on github as a
remote:
git remote add origin [url]
the url can be found in the repository on github
I could use any name instead of "origin". It's the name I will use in this
repository to refer to the repository on github. If I only have one remote, it's
standard to name it "origin"
A remote in my local repository is basically a reference to another repository.
When you clone a repository, a remote gets set up for you automatically.

git remote        - see the remote repositories created

to verify that the url was added correctly - use the following command to get
the verbose (-v) information from the remote:

git remote -v

In order to send my changes to the remote:
git push [remote_to_which_I_send_changes] [local_branch_to_be_pushed]

Pull from github (pull all commits reachable from the specified branch on
github):
git pull [remote_name] [branch_I_want_to_pull]
e.g.:
git pull origin master

With Git for Windows, running the following in the command line will store your
credentials (so you don't need to provide your credentials related to github
whenever you push something to github):
git config --global credential.helper wincred

--------------------------------------------------------------------------------
